@model IEnumerable<PTE_Web.Models.PTEWEB_ItemNameType_ByDaily>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout_bootstrap.cshtml";
}

<style>
    #bootstrapDialog {
        top: 10px;
        bottom: 0;
        left: -30%;
        z-index: 10040;
        overflow: auto;
        overflow-y: auto;
    }

    .modal-header {
        padding: 9px 15px;
        border-bottom: 1px solid #eee;
        background-color: #0480be;
        -webkit-border-top-left-radius: 5px;
        -webkit-border-top-right-radius: 5px;
        -moz-border-radius-topleft: 5px;
        -moz-border-radius-topright: 5px;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
    }
</style>
<link href="~/Content/bootstrapSelect.css" rel="stylesheet" />

<h2>Issue </h2>
<div class="raw">
    <div class="col-md-6">
        <div class="white-box" style="height:200px">
            <div id="T1_Pie"></div>
        </div>
        <div class="white-box" style="height:200px">
            <div id="T2_Pie"></div>
        </div>
        <div class="white-box" style="height:200px">
            <div id="T3_Pie"></div>
        </div>
        <div class="white-box" style="height:200px">
            <div id="T5_Pie"></div>
        </div>
    </div>
    <div class="col-md-4">
        <div id="IssueList"></div>
    </div>
</div>

@*<button type="button" class="btn btn-primary" data-toggle="modal" data-target=".Issue-modal-lg">Large modal</button>*@
<div class="modal fade  Issue-modal-lg" id="bootstrapDialog" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id="IssueReplys"></div>
        </div>
    </div>
</div>
<div class="modal fade" id="NewIssueModal" tabindex="-1" role="dialog" aria-labelledby="modal-register-label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">&times;</span><span class="sr-only">Close</span>
                </button>
                <h3 class="modal-title" id="modal-register-label">Create New Issue</h3>
                <p style="color:white;font-size:16px;">請填入自定義Issue</p>
            </div>
            <div class="modal-body">
                <form role="form" action="InsertNewIssue" method="post" class="registration-form">
                    <div class="form-group">
                        <select id="choiceOrg" name="org">
                            <option value="T1" selected="selected">T1</option>
                            <option value="T2">T2</option>
                            <option value="T3">T3</option>
                            <option value="T5">T5</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <input type="text" id="key_ItemNameType" placeholder="請輸入ItemNameTYpe或是Product Name" class="form-control" /><br />

                        <h2>ItemNameType：<label name="lbl_itemnametype"></label></h2>
                        <input type="hidden" name="frm_itemnametype" value="" />
                        <h2>Description：<label name="lbl_description"></label></h2>
                        <input type="hidden" name="frm_description" value="" />
                    </div>
                    <div class="form-group">
                        <label id="Description"></label>
                    </div>
                    <div class="form-group">
                        @*<label class="sr-only" for="form-about-yourself">請輸入Issue內容</label>*@
                        <textarea name="issueContent" placeholder="請輸入Issue觸發原因"
                                  class="form-about-yourself form-control" id="form-about-yourself"></textarea>
                    </div>

                    <button type="submit" class="btn-warning" onclick="loadershow()">新增Issue</button>
                    <img id="loader" src="~/Content/74H8.gif" style="display:none" />
                </form>
            </div>
        </div>
    </div>
</div>
@if (TempData["Msg"] != null)
{
    <script>
        var message = @Html.Raw(Json.Encode(TempData["Msg"]));
        alert(message);
    </script>
}
<script src="~/Scripts/bootstrap3-typeahead.min.js"></script>
<script>
                         var PieModel =@Html.Raw(Json.Encode(ViewBag.OrgsIssue));
                         var Data = [];
                         Data.push([{Status: "OPEN", Count: PieModel[0].OPEN }, { Status: "CLOSE", Count: PieModel[0].CLOSE }])
                         Data.push([{ Status: "OPEN", Count: PieModel[1].OPEN }, { Status: "CLOSE", Count: PieModel[1].CLOSE }])
                         Data.push([{ Status: "OPEN", Count: PieModel[2].OPEN }, { Status: "CLOSE", Count: PieModel[2].CLOSE }])
                         Data.push([{ Status: "OPEN", Count: PieModel[3].OPEN }, { Status: "CLOSE", Count: PieModel[3].CLOSE }])

    // Add data
    for (var i = 0; i < Data.length; i++) {
                        var chart_id = "";
                        if (i == 3)
                            chart_id = "T5";
                        else
                            chart_id = "T" + (i + 1);

                        var chart = am4core.create(chart_id + "_Pie", am4charts.PieChart);

                        chart.data = Data[i];
                        chart.legend = new am4charts.Legend();
                        chart.autoMargins = false;
                        // Add and configure Series
                        var pieSeries = chart.series.push(new am4charts.PieSeries());
                        pieSeries.dataFields.value = "Count";
                        pieSeries.dataFields.category = "Status";
                        pieSeries.slices.template.stroke = am4core.color("#fff");
                        pieSeries.slices.template.strokeWidth = 2;
                        pieSeries.slices.template.strokeOpacity = 1;
                        // This creates initial animation
                       pieSeries.hiddenState.properties.opacity = 1;
                       pieSeries.hiddenState.properties.endAngle = -90;
                       pieSeries.hiddenState.properties.startAngle = -90;
                       var title = chart.titles.create();
                       title.text = chart_id+" Status";
                       title.fontSize = 25;
                         };
                        var SetTextColorFn = function (x) {
                         x.style = {
                        'font-size': '14px',
                        'color': 'red' };
                         x.value = '<div style="margin-top: 30px;">' + x.value + '</div>';
                         return x;
                                  };
                       var model = @Html.Raw(Json.Encode(ViewBag.IssueList));
                        $('#IssueList').empty();
                       var grid= $('#IssueList').FancyGrid({
                            title: 'Issue List',
                            renderTo: 'container',
                            height: 'fit',
                            width: 'fit',
                            cellHeight: 75,
                            data: model,
                            theme: 'gray',
                            resizable: true,
                            trackOver: true,
                            defaults: {
                                type: 'string',
                                width: 120,
                                sortable: true,
                                ellipsis: true,
                                resizable: true,
                                filter: {
                                        header: true,
                                        emptyText: 'Search'
                                      }
                            },
                            paging: {
                                pageSize: 5,
                                pageSizeData: [5, 10, 20, 50, 100]
                            },
                           exporter: true,
                              tbar: [{
                            text: 'New Issue',
                            handler: function () {
                                OpenNewIssueModal();
                            }
                           }],
                            events: [{
                                cellclick: function (grid, o) {

                                    if (o.columnIndex == 0 && o.column.index=="LinkImg") {
                                        $.ajax({
                                            url: "@Url.Action("GetReplyAction", "IssueIndex")",
                                            method: "post",
                                            contentType: 'application/json',
                                            data: JSON.stringify({ ItemNameType: o.data.ItemNameType,Org:o.data.Support_Org }),
                                            success: function (data) {
                                                $('#bootstrapDialog').modal('show');
                                                ReplyModel = data;
                                                GetIssueReply();
                                            }
                                        });
                                    }
                                }
                            }],
                           columns: [
                                  {
                                index: 'LinkImg',
                                locked: true,
                                title: '歷史紀錄',
                                width: 60
                                }, {
                                             index: 'Support_Org',
                                             title: 'Org',
                                             type: 'combo',
							                 width: 80,
                                             itemCheckBox: true,
                                             multiSelect: true,
                                             data: ['T1', 'T2', 'T3','T5']
                                         },
                               {
                                index: 'ItemNameType',
                                locked: true,
                                title: 'ItemNameType',
                                width: 120
                            },
                            {
                                index: 'Description',
                                title: 'Description',
                                width: 200
                            },
                            {
                                index: 'LastUpdateDate',
                                title: 'LastUpdateDate',
                                width: 200
                            }, {
                                type: 'image',
                                index: 'Status_Pic',
                                width: 80,
                                title: 'Status'
                            },
                            {
                                title: 'Details',
                                type: 'action',
                                width: 60,
                                align: 'center',
                                items: [{
                                    text: 'Edit',
                                    render: SetTextColorFn,
                                    cls: 'fa fa-user-plus',
                                    handler: function (grid, o) {
                                        window.open("@Url.Action("IssueEditor", "IssueIndex")" + "?issueid=" + o.value.CauseIssueID + "&ItemNameType=" + o.value.ItemNameType + "&org=" + o.value.Support_Org, '_blank');
                                    }
                                }]
                            }
                            ]
                        })
                        var ReplyModel =@Html.Raw(Json.Encode(ViewBag.IssueReplys));
                        if (ReplyModel != null) {
                                $('#bootstrapDialog').modal('show');
                            GetIssueReply();
    }
     $('#key_ItemNameType').typeahead({
         source: function (request, response) {
             //debugger;
                $.ajax({
                    url: "../IssueIndex/GetItemNameTypeDes?queryStr=" + request+"&Org="+$('#choiceOrg').val(),
                    dataType: "json",
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        var arrProds = [];
                      //  debugger;
                        response($.map(data, function (item) {
                            arrProds.push(item.ItemNameType+" "+item.Description);
                        }))
                        response(arrProds);

                        // SET THE WIDTH AND HEIGHT OF UI AS "auto" ALONG WITH FONT.
                        // YOU CAN CUSTOMIZE ITS PROPERTIES.
                        $(".dropdown-menu").css("width", "auto");
                        $(".dropdown-menu").css("height", "auto");
                        $(".dropdown-menu").css("font", "15px Verdana");
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert(textStatus);
                    }
                });
         },
         afterSelect: function (item) {

             var splits = item.split(" ");
             $('#key_ItemNameType').val(splits[0])
             $('label[name=lbl_itemnametype]').text(splits[0])
             $('label[name=lbl_description]').text(splits[1])
             $('input[name=frm_itemnametype]').val(splits[0])
             $('input[name=frm_description]').val(splits[1])

            },
            hint: true,             // SHOW HINT (DEFAULT IS "true").
            highlight: true,        // HIGHLIGHT (SET <strong> or <b> BOLD). DEFAULT IS "true".
            minLength: 2            // MINIMUM 1 CHARACTER TO START WITH.
     });
    function loadershow() {
        $('#loader').show();

    }
                    function GetIssueReply() {
                        $('#IssueReplys').empty()
                        $('#IssueReplys').FancyGrid({
                            title: '處理記錄',
                            renderTo: 'IssueReplyContent',
                            height: 'fit',
                            width: 'fit',
                            cellHeaderHeight: 40,
                            cellHeight: '150',
                            data: ReplyModel,
                            theme: 'blue',
                            resizable: true,
                            paging: {
                                pageSize: 5,
                                pageSizeData: [5, 10, 20, 50]
                            },
                            columns: [
                                {
                                index: 'ItemNameType',
                                locked: true,
                                title: 'ItemNameType',
                                width: 120
                            }, {
                                index: 'FailItem',
                                title: 'FailItem',
                                type: 'combo',
                                    cellTip: '{value}'
                                    , render: function (o) {
                                   o.style = {
                                    'font-size': '16px'
                                     };
                                 return o;
                                    },
                                autoHeight: true,
                                width: 150,
                            },{
                                index: 'Cause',
                                title: 'Cause Type',
                                cellTip: '{value}',
                                    width: 150
                                    , render: function (o) {
                                   o.style = {
                                       'font-size': '16px'
                                     };
                                 return o;
                                    },
                            }, {
                                index: 'CauseCommon',
                                title: 'CauseComments',
                                cellTip: '{value}',
                                width: 350
                            }, {
                                index: 'Action',
                                title: 'Action Type',
                                    cellTip: '{value}'
                                    , render: function (o) {
                                   o.style = {
                                    'font-size': '16px'
                                     };
                                 return o;
                                    },
                                     autoHeight: true,
                                width: 150
                            }, {
                                index: 'ActionCommon',
                                title: 'ActionComments',
                                    cellTip: '{value}'
                                    , render: function (o) {
                                   o.style = {
                                       'font-size': '16px'

                                     };
                                 return o;
                                    },
                                     autoHeight: true,
                                width: 350

                            }, {
                                index: 'ENAME',
                                title: 'Editor',
                                cellTip: '{value}',
                                width: 90
                            }, {
                                index: 'Owner',
                                title: 'Owner',
                                width: 60
                            }, {
                                index: 'FileName',
                                title: 'File',
                                width: 60
                            }, {
                                index: 'CreateTime',
                                title: 'CreateTime',
                                width: 140
                            }
                            ]
                        });
    }
                    function OpenNewIssueModal() {
                        $('#NewIssueModal').modal('show');
                        $("#choiceOrg").bootstrapSelect("init", { "maxWidth": 400 });
                     }
</script>
<script src="~/Scripts/bootstrapSelect.js"></script>