@model IEnumerable<PTE_Web.Models.PTEWEB_ItemNameType_ByDaily>

@{
    Layout = "~/Views/Shared/_Layout_bootstrap.cshtml";
}

<!-- 日期選擇物件 Start-->

<div class="row">
    <div class="col-md-12">
        <div class="white-box">
            <form method="post" name="DateRangeForm" action="@ViewContext.RouteData.Values["action"]">
                <div class="input-group">
                    <b style="font-size:20px;"><span style="color:black">Owner: </span></b>
                    <input name="owner" style="width:120px;font-size:20px;padding-right:30px" type="text" value=@TempData["Owner"]>
                    <b style="font-size:20px;padding-right:30px"><span style="color:black">  From </span></b>
                    <input class=flatpickr style="width:200px;font-size:20px;padding-right:30px" type="text" placeholder=@TempData["StartDate"] name="startdate" data-id="rangePlugin">
                    <b style="padding-right:30px;padding-left:30px;font-size:20px"><span style="color:black">  to   </span></b>
                    <input type="text" align="middle" style="padding-right:30px;width:200px;font-size:20px" placeholder=@TempData["EndDate"] id="secondRangeInput" name="enddate">
                    <input type='submit' class="btn waves-effect waves-light btn-primary" style="font-size:20px;margin-top:-20px;margin-left:15px;text-align:center;" value='Go' />
                </div>
            </form>
        </div>
    </div>
</div>
<!-- 日期選擇物件 End-->

<style>
    #bootstrapDialog {
        top: 10px;
        bottom: 0;
        left: -30%;
        z-index: 10040;
        overflow: auto;
        overflow-y: auto;
    }

    .modal-header {
        padding: 9px 15px;
        border-bottom: 1px solid #eee;
        background-color: #0480be;
        -webkit-border-top-left-radius: 5px;
        -webkit-border-top-right-radius: 5px;
        -moz-border-radius-topleft: 5px;
        -moz-border-radius-topright: 5px;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
    }
</style>
<div class="row">
    <div class="col-md-12">
        <div class="panel panel-info">
            <div class="panel-heading"><h4 style="font-size:30px;font-weight:bold;font-style:italic">Performance</h4></div>
            <div class="panel-body">
                <div class="progress-main">
                    <span class="progress-text" style="font-size:20px;">ATE FYR </span>
                    <span class="progress-stats" style="font-size:20px">@ViewBag.OwnerPerformanceList["ATE"]</span>
                    <div class="progress progress-sm">
                        <div style="width: @ViewBag.OwnerPerformanceList["ATE"];" class="progress-bar"></div>
                    </div>
                    <br>
                    <span style="font-size:10px;">High: @ViewBag.OwnerPerformanceHL["ATE"][0]   / </span>
                    <span style="font-size:10px;">Low: @ViewBag.OwnerPerformanceHL["ATE"][1]    /</span>
                    <span style="font-size:10px;">Station Count(units>500): @ViewBag.OwnerPerformanceHL["ATE"][2]    </span>
                </div>
                <div class="progress-main">
                    <span class="progress-text" style="font-size:20px;">FT FYR</span>
                    <span class="progress-stats" style="font-size:20px">@ViewBag.OwnerPerformanceList["FT"]</span>
                    <div class="progress progress-sm">
                        <div style="width: @ViewBag.OwnerPerformanceList["FT"];" class="progress-bar progress-bar-success"></div>
                    </div>
                    <br>
                    <span style="font-size:10px;">High: @ViewBag.OwnerPerformanceHL["FT"][0]    /</span>
                    <span style="font-size:10px;">Low: @ViewBag.OwnerPerformanceHL["FT"][1]    /</span>
                    <span style="font-size:10px;">Station Count(units>500): @ViewBag.OwnerPerformanceHL["FT"][2]    </span>
                </div>
            </div>
        </div>
    </div>
</div>

<link href="~/Content/bootstrapSelect.css" rel="stylesheet" />

<div class="row">
    <div class="col-md-6">
        <div class="white-box">
            <div id="container_2" style="min-width:400px;height:600px"></div>
            <script type="text/javascript">
    AmCharts.makeChart("container_2",
        {
            "type": "serial",
            "categoryField": "description",
            "rotate": true,
            "startDuration": 1,
            "theme": "default",
            "categoryAxis": {
                "gridPosition": "start",
                "autoGridCount": false,
                "gridCount": 20
            },
            "trendLines": [],
            "graphs": [
                {
                    "fillAlphas": 1,
                    "id": "AmGraph-1",
                    "title": "fyr",
                    "type": "column",
                    "valueField": "fyr",
                    "balloonText": "[[category]]:\n <b>[[value]]%</b>"

                }
            ],
            "guides": [
                {
                    "above": true,
                    "boldLabel": true,
                    "color": "#FF0000",
                    "dashLength": 5,
                    "fillAlpha": 0,
                    "fontSize": 13,
                    "id": "Guide-1",
                    "inside": true,
                    "label": "Focus Gap",
                    "labelRotation": -90,
                    "lineAlpha": 1,
                    "lineColor": "#ff0000",
                    "toAngle": 0,
                    "value": 90
                }
            ],
            "valueAxes": [
                {
                    "id": "fyr ",
                    "title": "FYR (%)"
                }
            ],
            "allLabels": [],
            "balloon": {},
            "titles": [
                {
                    "id": "FT",
                    "size": 15,
                    "tabIndex": 1,
                    "text": "All Station FYR (QTY > 500)"
                }
            ],
            "dataProvider": @(new HtmlString(ViewBag.StationJsonList))                                }
          );
            </script>
        </div>
    </div>
    <div class="col-md-6">
        <div class="white-box">
            <div class="table-responsive" style="min-width:400px;height:600px">
                <div id="IssueList"></div>
            </div>
        </div>
    </div>
</div>

@*<button type="button" class="btn btn-primary" data-toggle="modal" data-target=".Issue-modal-lg">Large modal</button>*@
<div class="modal fade  Issue-modal-lg" id="bootstrapDialog" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id="IssueReplys"></div>
        </div>
    </div>
</div>
<div class="modal fade" id="NewIssueModal" tabindex="-1" role="dialog" aria-labelledby="modal-register-label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">&times;</span><span class="sr-only">Close</span>
                </button>
                <h3 class="modal-title" id="modal-register-label">Create New Issue</h3>
                <p style="color:white;font-size:16px;">請填入自定義Issue</p>
            </div>
            <div class="modal-body">
                <form role="form" action="InsertNewIssue" method="post" class="registration-form">
                    <div class="form-group">
                        <select id="choiceOrg" name="org">
                            <option value="T1" selected="selected">T1</option>
                            <option value="T2">T2</option>
                            <option value="T3">T3</option>
                            <option value="T5">T5</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <input type="text" id="key_ItemNameType" placeholder="請輸入ItemNameTYpe或是Product Name" class="form-control" /><br />

                        <h2>ItemNameType：<label name="lbl_itemnametype"></label></h2>
                        <input type="hidden" name="frm_itemnametype" value="" />
                        <h2>Description：<label name="lbl_description"></label></h2>
                        <input type="hidden" name="frm_description" value="" />
                    </div>
                    <div class="form-group">
                        <label id="Description"></label>
                    </div>
                    <div class="form-group">
                        @*<label class="sr-only" for="form-about-yourself">請輸入Issue內容</label>*@
                        <textarea name="issueContent" placeholder="請輸入Issue觸發原因"
                                  class="form-about-yourself form-control" id="form-about-yourself"></textarea>
                    </div>

                    <button type="submit" class="btn-warning" onclick="loadershow()">新增Issue</button>
                    <img id="loader" src="~/Content/74H8.gif" style="display:none" />
                </form>
            </div>
        </div>
    </div>
</div>
@if (TempData["Msg"] != null)
{
    <script>
        var message = @Html.Raw(Json.Encode(TempData["Msg"]));
        alert(message);
    </script>
}
<script src="~/Scripts/bootstrap3-typeahead.min.js"></script>
<script>

                        var SetTextColorFn = function (x) {
                         x.style = {
                        'font-size': '14px',
                        'color': 'red' };
                         x.value = '<div style="margin-top: 30px;">' + x.value + '</div>';
                         return x;
                                  };
                       var model = @Html.Raw(Json.Encode(ViewBag.IssueList));
                        $('#IssueList').empty();
                       var grid= $('#IssueList').FancyGrid({
                            title: 'Issue List',
                            renderTo: 'container',
                            height: 'fit',
                            width: 'fit',
                            cellHeight: 75,
                            data: model,
                            theme: 'gray',
                            resizable: true,
                            trackOver: true,
                            defaults: {
                                type: 'string',
                                width: 120,
                                sortable: true,
                                ellipsis: true,
                                resizable: true,
                                filter: {
                                        header: true,
                                        emptyText: 'Search'
                                      }
                            },
                            paging: {
                                pageSize: 5,
                                pageSizeData: [5, 10, 20, 50, 100]
                            },
                           exporter: true,
                              tbar: [{
                            text: 'New Issue',
                            handler: function () {
                                OpenNewIssueModal();
                            }
                           }],
                            events: [{
                                cellclick: function (grid, o) {

                                    if (o.columnIndex == 0 && o.column.index=="LinkImg") {
                                        $.ajax({
                                            url: "@Url.Action("GetReplyAction", "IssueIndex")",
                                            method: "post",
                                            contentType: 'application/json',
                                            data: JSON.stringify({ ItemNameType: o.data.ItemNameType,Org:o.data.Support_Org }),
                                            success: function (data) {
                                                $('#bootstrapDialog').modal('show');
                                                ReplyModel = data;
                                                GetIssueReply();
                                            }
                                        });
                                    }
                                }
                            }],
                           columns: [
                                  {
                                index: 'LinkImg',
                                locked: true,
                                title: '歷史紀錄',
                                width: 60
                                }, {
                                             index: 'Support_Org',
                                             title: 'Org',
                                             type: 'combo',
							                 width: 80,
                                             itemCheckBox: true,
                                             multiSelect: true,
                                             data: ['T1', 'T2', 'T3','T5']
                                         },
                               {
                                index: 'ItemNameType',
                                locked: true,
                                title: 'ItemNameType',
                                width: 120
                            },
                            {
                                index: 'Description',
                                title: 'Description',
                                width: 200
                            },
                            {
                                index: 'LastUpdateDate',
                                title: 'LastUpdateDate',
                                width: 200
                            }, {
                                type: 'image',
                                index: 'Status_Pic',
                                width: 80,
                                title: 'Status'
                            },
                            {
                                title: 'Details',
                                type: 'action',
                                width: 60,
                                align: 'center',
                                items: [{
                                    text: 'Edit',
                                    render: SetTextColorFn,
                                    cls: 'fa fa-user-plus',
                                    handler: function (grid, o) {
                                        window.open("@Url.Action("IssueEditor", "IssueIndex")" + "?issueid=" + o.value.CauseIssueID + "&ItemNameType=" + o.value.ItemNameType + "&org=" + o.value.Support_Org, '_blank');
                                    }
                                }]
                            }
                            ]
                        })
                        var ReplyModel =@Html.Raw(Json.Encode(ViewBag.IssueReplys));
                        if (ReplyModel != null) {
                                $('#bootstrapDialog').modal('show');
                            GetIssueReply();
    }
     $('#key_ItemNameType').typeahead({
         source: function (request, response) {
             //debugger;
                $.ajax({
                    url: "../IssueIndex/GetItemNameTypeDes?queryStr=" + request+"&Org="+$('#choiceOrg').val(),
                    dataType: "json",
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        var arrProds = [];
                      //  debugger;
                        response($.map(data, function (item) {
                            arrProds.push(item.ItemNameType+" "+item.Description);
                        }))
                        response(arrProds);

                        // SET THE WIDTH AND HEIGHT OF UI AS "auto" ALONG WITH FONT.
                        // YOU CAN CUSTOMIZE ITS PROPERTIES.
                        $(".dropdown-menu").css("width", "auto");
                        $(".dropdown-menu").css("height", "auto");
                        $(".dropdown-menu").css("font", "15px Verdana");
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert(textStatus);
                    }
                });
         },
         afterSelect: function (item) {

             var splits = item.split(" ");
             $('#key_ItemNameType').val(splits[0])
             $('label[name=lbl_itemnametype]').text(splits[0])
             $('label[name=lbl_description]').text(splits[1])
             $('input[name=frm_itemnametype]').val(splits[0])
             $('input[name=frm_description]').val(splits[1])

            },
            hint: true,             // SHOW HINT (DEFAULT IS "true").
            highlight: true,        // HIGHLIGHT (SET <strong> or <b> BOLD). DEFAULT IS "true".
            minLength: 2            // MINIMUM 1 CHARACTER TO START WITH.
     });
    function loadershow() {
        $('#loader').show();

    }
                    function GetIssueReply() {
                        $('#IssueReplys').empty()
                        $('#IssueReplys').FancyGrid({
                            title: '處理記錄',
                            renderTo: 'IssueReplyContent',
                            height: 'fit',
                            width: 'fit',
                            cellHeaderHeight: 40,
                            cellHeight: '150',
                            data: ReplyModel,
                            theme: 'blue',
                            resizable: true,
                            paging: {
                                pageSize: 5,
                                pageSizeData: [5, 10, 20, 50]
                            },
                            columns: [
                                {
                                index: 'ItemNameType',
                                locked: true,
                                title: 'ItemNameType',
                                width: 100
                            }, {
                                index: 'FailItem',
                                title: 'FailItem',
                                type: 'combo',
                                    cellTip: '{value}'
                                    , render: function (o) {
                                   o.style = {
                                    'font-size': '16px'
                                     };
                                 return o;
                                    },
                                autoHeight: true,
                                width: 150,
                            },{
                                index: 'Cause',
                                title: 'Cause Type',
                                cellTip: '{value}',
                                    width: 150
                                    , render: function (o) {
                                   o.style = {
                                       'font-size': '16px'
                                     };
                                 return o;
                                    },
                            }, {
                                index: 'CauseCommon',
                                title: 'CauseComments',
                                cellTip: '{value}',
                                width: 350
                            }, {
                                index: 'Action',
                                title: 'Action Type',
                                    cellTip: '{value}'
                                    , render: function (o) {
                                   o.style = {
                                    'font-size': '16px'
                                     };
                                 return o;
                                    },
                                     autoHeight: true,
                                width: 150
                            }, {
                                index: 'ActionCommon',
                                title: 'ActionComments',
                                    cellTip: '{value}'
                                    , render: function (o) {
                                   o.style = {
                                       'font-size': '16px'

                                     };
                                 return o;
                                    },
                                     autoHeight: true,
                                width: 350

                            }, {
                                index: 'ENAME',
                                title: 'Editor',
                                cellTip: '{value}',
                                width: 90
                            }, {
                                index: 'Owner',
                                title: 'Owner',
                                width: 60
                            }, {
                                index: 'FileName',
                                title: 'File',
                                width: 60
                            }, {
                                index: 'CreateTime',
                                title: 'CreateTime',
                                width: 140
                            }
                            ]
                        });
    }
                    function OpenNewIssueModal() {
                        $('#NewIssueModal').modal('show');
                        $("#choiceOrg").bootstrapSelect("init", { "maxWidth": 400 });
                     }
</script>
<script src="~/Scripts/bootstrapSelect.js"></script>

<div class="row">
    <div class="col-md-12">
        <div class="white-box">
            <h2 class="header-title">Top Focus</h2>
            <div class="table-responsive">
                <div id="containers"></div>
                <script data-config>
                     var model = @Html.Raw(Json.Encode(Model));
                    $('#containers').FancyGrid({
                        title: 'Top Focus',
                        renderTo: 'container',
                        height: 'fit',
                        width: 'fit',
                        data: model,
                        theme: 'gray',
                        resizable: true,
                        defaults: {
                            type: 'string',
                            width: 120,
                            sortable: true,
                            ellipsis: true,
                            resizable: true,
                            filter: {
                                header: true,
                                emptyText: 'Search'
                            }
                        },
                        paging: {
                            pageSize: 10,
                            pageSizeData: [5, 10, 20, 50, 500, 1000]
                        },
                        exporter: true,
                        tbar: [{
                            text: 'Export to Excel',
                            handler: function () {
                                var thispageSize = this.getPageSize();
                                this.setPageSize(this.getTotal());
                                this.exportToExcel({
                                    fileName: 'All_FYRTable_Excel',
                                    header: true
                                });
                                this.setPageSize(thispageSize);
                            }
                        }, {
                            text: 'Export to CSV',
                            handler: function () {
                                var thispageSize = this.getPageSize();
                                this.setPageSize(this.getTotal());
                                this.exportToCSV({
                                    fileName: 'All_FYRTable_CSV.csv',
                                    header: true
                                });
                                this.setPageSize(thispageSize);
                            }
                        }],
                        columns: [{
                            index: 'ItemNameType',
                            locked: true,
                            title: 'ItemNameType',
                            width: 120,
                            type: 'number'

                        },  {
                            index: 'TestStation',
                            title: 'TestStation',
                            type: 'combo',
                            width: 140,
                            itemCheckBox: true,
                            multiSelect: true,
                                data: ['ATE', 'BT', 'FT', 'Sound', 'CTHT', 'Engineer', 'Pairing', 'IQC', 'QALab', 'NOH', 'VT', 'RTESN', 'SNRCalibration', 'UK_RL','US_RL', 'CleanRoom', 'Outsources', 'Baro', 'uTube', 'G-Sensor', 'E-Compass', 'Airtight', 'Sensor','PackIntegrated']
                        },  {
                            index: 'StationType',
                            title: 'StationType',
                            type: 'combo',
                            itemCheckBox: true,
                            multiSelect: true,
                            data: ['AOEM', 'Camera', 'Hand_Held', 'In_the_Air', 'On_The_Trail', 'On_the_Water', 'Onto_Fitness', 'Others', 'PND', 'UnKnown']
                        },  {
                            index: 'TestType',
                            title: 'TestType',
                            width: 80

                        }, {
                            index: 'TestType2',
                            title: 'TestType2'

                        }, {
                            index: 'Description',
                            title: 'Description',
                            width: 200

                        }, {
                            index: 'FYR',
                            title: 'FYR',
                            type: 'number'
                        }, {
                            index: 'Avg_Pass_Time',
                            title: 'Avg_Pass_Time',
                            type: 'number'
                        }, {
                            index: 'Avg_Total_Time',
                            title: 'Avg_Total_Time',
                            type: 'number'

                        },{
                            index: 'Pass',
                            title: 'Pass',
                            type: 'number'

                        }, {
                            index: 'Fail',
                            title: 'Fail',
                            type: 'number'

                        }, {
                            index: 'Total',
                            title: 'Total',
                            type: 'number'
                        }, {
                            index: 'D_Pass',
                            title: 'D_Pass',
                            type: 'number'
                        }, {
                            index: 'D_Fail',
                            title: 'D_Fail',
                            type: 'number'
                        }, {
                            index: 'D_Total',
                            title: 'D_Total',
                            type: 'number'
                        },
                        {
                            title: 'Details',
                            type: 'action',
                            width: 60,
                            items: [{
                                text: 'Details',
                                cls: 'btn btn-success',
                                handler: function (grid, o) {
                                    window.open("@Url.Action("AnalyzeItemNameType", "AnalyzeTool")" + "?itemnametype=" + o.value.ItemNameType + "&org=" + o.value.Org+"&startdate=@TempData["StartDate"]&enddate=@TempData["EndDate"]", '_blank');
                                }
                            }]
                        },
                        {
                            title: 'Spare',
                            type: 'action',
                            width: 60,
                            items: [{
                                text: 'Spare',
                                cls: 'btn btn-info',
                                handler: function (grid, o) {
                                    window.open("@Url.Action("Index", "SpareTool")" + "?itemnametype=" + o.value.ItemNameType + "&org=" + o.value.Org+"&startdate=@TempData["StartDate"]&enddate=@TempData["EndDate"]", '_blank');
                                }
                            }]
                        }
                        ]
                    });
                    //TODO Switch btn if Athena Item
                    @*function GetNonITMFYRTrend(org, description) {
                        var st =@Html.Raw(Json.Encode(TempData["StartDate"]));
                        var et =@Html.Raw(Json.Encode(TempData["EndDate"]));
                        var dataString = 'st=' + encodeURIComponent(st) + "&et=" + encodeURIComponent(et) + "&org=" + org + "&des=" + encodeURIComponent(description);
                        $.ajax({
                            url: "Dashboard/SearchNonITMFYR",
                            data: dataString,
                            type: "POST",
                            success: function (data) {
                                //init chart 為了防止chart 重疊
                                $('#Canvs').replaceWith('<canvas id = "Canvs" height = "300vw" width = "1000vw"></canvas>');
                                var totalData = [];
                                var FYR = [];
                                var date = [];
                                var uph = []
                                var uphMax = 0;
                                for (var i = 0; i < data.length; i++){
                                    totalData.push(data[i].Total);
                                    FYR.push(data[i].FYR);
                                    date.push(data[i].Date);
                                    uph.push(data[i].UPH_Achievement);
                                    if (data[i].UPH_Achievement > 100) {
                                        uphMax = uphMax > data[i].UPH_Achievement ? uphMax : data[i].UPH_Achievement
                                    }
                                }
                                var color = Chart.helpers.color;
                                 var lineChartData = {
                                        labels: date,
                                        datasets: [{
                                            label: "Total",
                                           type:"bar",
                                            backgroundColor: color(window.chartColors.red).alpha(0.5).rgbString(),
			                	            borderColor: window.chartColors.red,
                                            fill: false,
                                            data: totalData,
                                            yAxisID: "y-axis-1",
                                        }, {
                                            label: "FYR",
                                            borderColor: window.chartColors.blue,
                                            backgroundColor: window.chartColors.blue,
                                            fill: false,
                                            data:FYR,
                                            yAxisID: "y-axis-2"
                                            },
                                            {
                                                label: "UPH",
                                                borderColor: window.chartColors.orange,
                                                backgroundColor: window.chartColors.orange,
                                                fill: false,
                                                data: uph,
                                                yAxisID: "y-axis-2"
                                            }
                                        ]
                                };
                                var ctx = document.getElementById("Canvs").getContext("2d");
                                var options= {
                                    responsive: true,
                                    hoverMode: 'index',
                                    stacked: false,
                                    title: {
                                        display: true,
                                        text: description
                                    },
                                    scales: {
                                        yAxes: [{
                                            type: "linear", // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                                            display: true,
                                            position: "left",
                                            id: "y-axis-1",
                                        }, {
                                            type: "linear", // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                                            display: true,
                                            position: "right",
                                            id: "y-axis-2",
                                            gridLines: {
                                                drawOnChartArea: false, // only want the grid lines for one axis to show up
                                            }, ticks: {
                                                max: uphMax > 100 ? uphMax:100,
                                                min: 0,
                                                stepSize: 10
                                            }
                                        }],
                                    }
                                }
                                var nonITMXPChart = new Chart(ctx, { type: 'line', data: lineChartData, options: options });
                            }
                        });
                    }*@
                </script>
            </div>
        </div>
    </div>
</div>