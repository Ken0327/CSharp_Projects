stages:
    - build
    - test
    - deploy
    
#before_script:
#  - 'D:\Nuget\nuget.exe restore DotNetFrameworkAPI.sln'
# place project specific paths in variables to make the rest of the script more generic
#variables:
# EXE_RELEASE_FOLDER: 'YourApp\bin\Release'
#  MSI_RELEASE_FOLDER: 'Setup\bin\Release'
#  TEST_FOLDER: 'Tests\bin\Release'
#  DEPLOY_FOLDER: 'P:\Projects\YourApp\Builds'
  
#  NUGET_PATH: 'C:\NuGet\nuget.exe'
#  MSBUILD_PATH: 'C:\Program Files (x86)\MSBuild\14.0\Bin\msbuild.exe'
#  NUNIT_PATH: 'C:\Program Files (x86)\NUnit.org\nunit-console\nunit3-console.exe'

stages:
  - build
  - test
  - deploy

build_job:
  stage: build
  only:
     - echo "build_job"
     - /^release\/.*$/
    #- tags # the build process will only be started by git tag commits
  script:
    - '"C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\MSBuild\15.0\Bin\MSBuild.exe" "PTE_WEB.sln" /p:DeployOnBuild=true /p:PublishProfile=ReleaseProfile.pubxml'
    #- '& "$env:NUGET_PATH" restore' # restore Nuget dependencies
    #- '& "$env:MSBUILD_PATH" /p:Configuration=Release' # build the project
  artifacts:
    #expire_in: 1 week # save gitlab server space, we copy the files we need to deploy folder later on
    #paths:
    #  - '$env:EXE_RELEASE_FOLDER\YourApp.exe' # saving exe to copy to deploy folder
    #  - '$env:MSI_RELEASE_FOLDER\YourApp Setup.msi' # saving msi to copy to deploy folder
    #  - '$env:TEST_FOLDER\' # saving entire Test project so NUnit can run tests 

#test_job:
#  stage: test
#  only:
#    - tags
#  script:
#    - '& "$env:NUNIT_PATH" ".\$env:TEST_FOLDER\Tests.dll"' # running NUnit tests
#  artifacts:
#    expire_in: 1 week # save gitlab server space, we copy the files we need to deploy folder later on
#    paths:
#      - '.\TestResult.xml' # saving NUnit results to copy to deploy folder
#  dependencies:
#    - build_job

#deploy_job:
#  stage: deploy
#  only:
#    - /^release\/.*$/
#  script:
    # Compose a folder for each release based on commit tag.
    # Assuming your tag is Rev1.0.0.1, and your last commit message is 'First commit'
    # the artifact files will be copied to:
    # P:\Projects\YourApp\Builds\Rev1.0.0.1 - First commit\
#    #- '$commitSubject = git log -1 --pretty=%s'
#    #- '$deployFolder = $($env:DEPLOY_FOLDER) + "\" + $($env:CI_BUILD_TAG) + " - " + $commitSubject + "\"'

#    # xcopy takes care of recursively creating required folders
#    #- 'xcopy /y ".\$env:EXE_RELEASE_FOLDER\YourApp.exe" "$deployFolder"'
#    #- 'xcopy /y ".\$env:MSI_RELEASE_FOLDER\YourApp Setup.msi" "$deployFolder"'
#    - 'xcopy /y ".\TestResult.xml" \\peweb\PTE_Web

#  dependencies:
#    - build_job
#    #- test_job
  